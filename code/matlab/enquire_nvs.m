function output = enquire_nvs(str,table)

% % % User input for altLabel and collection
% % userAltLabel = input('Enter altLabel: ', 's');
% % userCollection = input('Enter collection ID: ', 's');

% User input for altLabel and collection
userAltLabel = str; % string, eg N1
userCollection = table; % string, eg R28

% Original code follows
% queryTemplate = sprintf([...
%     'PREFIX skos: <http://www.w3.org/2004/02/skos/core#>\n' ...
%     'PREFIX nerc: <http://vocab.nerc.ac.uk/collection/>\n' ...
%     'PREFIX dct: <http://purl.org/dc/terms/>\n' ...
%     'SELECT ?conceptURI\n' ...
%     'WHERE {\n' ...
%     '  ?concept a skos:Concept ;\n' ...
%     '           skos:altLabel "%s" ;\n' ...
%     '           skos:notation ?conceptNotation ;\n' ...
%     '           dct:issued ?versionDate .\n' ...
%     '  FILTER (CONTAINS(str(?conceptNotation), "%s"))\n' ...
%     '  BIND(URI(?concept) AS ?conceptURI)\n' ...
%     '}\n' ...
%     'ORDER BY DESC(?versionDate)\n' ...
%     'LIMIT 1\n'], userAltLabel, userCollection);
% 

% Working code follows
queryTemplate = sprintf([...
    'PREFIX skos: <http://www.w3.org/2004/02/skos/core#> ' ...
    'PREFIX nerc: <http://vocab.nerc.ac.uk/collection/> ' ...
    'PREFIX dct: <http://purl.org/dc/terms/> ' ...
    'SELECT ?conceptURI ' ...
    'WHERE { ' ...
    '  ?concept a skos:Concept ; ' ...
    '           skos:altLabel "%s" ; ' ...
    '           skos:notation ?conceptNotation . ' ...
    '  FILTER (CONTAINS(str(?conceptNotation), "%s")) ' ...
    '  BIND(URI(?concept) AS ?conceptURI) ' ...
    '} ' ...
    'LIMIT 1 '], userAltLabel, userCollection);

% queryTemplate for prefLabel  Notice @en so that xml:lang="en" is matched.
% queryTemplate = sprintf([...
%     'PREFIX skos: <http://www.w3.org/2004/02/skos/core#> ' ...
%     'PREFIX nerc: <http://vocab.nerc.ac.uk/collection/> ' ...
%     'PREFIX dct: <http://purl.org/dc/terms/> ' ...
%     'SELECT ?conceptURI ' ...
%     'WHERE { ' ...
%     '  ?concept a skos:Concept ; ' ...
%     '           skos:prefLabel "%s"@en ; ' ...
%     '           skos:notation ?conceptNotation . ' ...
%     '  FILTER (CONTAINS(str(?conceptNotation), "%s")) ' ...
%     '  BIND(URI(?concept) AS ?conceptURI) ' ...
%     '} ' ...
%     'LIMIT 1 '], userAltLabel, userCollection);

% Encode the query for the URL
queryEncoded = urlencode(queryTemplate);

% Specify the SPARQL endpoint URL
sparqlEndpoint = 'http://vocab.nerc.ac.uk/sparql/sparql';

% Construct the full URL with the query as a parameter
fullURL = [sparqlEndpoint, '?query=', queryEncoded];

try
    % Send a GET request to the SPARQL endpoint
    response = webread(fullURL);

    % Check if the request was successful
    if isfield(response, 'results') && isfield(response.results, 'bindings') && length(response.results.bindings) > 0
        conceptURI = response.results.bindings(1).conceptURI.value; 

        output.conceptURI = conceptURI;


%         disp(['Concept URI of the latest version: ' conceptURI]);
    else
%         disp('No results found.');

        output.conceptURI = 'No_results_found';
    end
catch
    disp('Error: Unable to retrieve data from the SPARQL endpoint');

    output.conceptURI = 'Error occurred';
end

return
